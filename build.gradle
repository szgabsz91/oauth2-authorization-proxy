buildscript {
    ext {
        javaVersion = 12
        bootstrapVersion = '4.3.1'
        embeddedMongoVersion = '2.2.0'
        googleApiServicesOAuth2Version = 'v2-rev150-1.25.0'
        jacocoVersion = '0.8.4'
        lombokVersion = '1.18.8'
        springBootVersion = '2.1.5.RELEASE'
        springDependencyManagementPluginVersion = '1.0.6.RELEASE'
        webjarsLocatorVersion = '0.36'
        spotbugsGradlePluginVersion = '2.0.0'
        gradleAggregateJavadocsPluginVersion = '3.0.1'
    }

    repositories {
        mavenCentral()

        maven {
            url 'https://plugins.gradle.org/m2'
        }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}"
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${spotbugsGradlePluginVersion}"
        classpath "com.netflix.nebula:gradle-aggregate-javadocs-plugin:${gradleAggregateJavadocsPluginVersion}"
    }
}

apply plugin: 'nebula-aggregate-javadocs'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'idea'
    apply plugin: 'com.github.spotbugs'

    group = 'com.github.szgabsz91'
    version = '1.0.0-SNAPSHOT'

    def additionalNameParts = project.rootDir.toPath().relativize(project.projectDir.toPath()).toString().split('/')
    archivesBaseName = "${project.rootProject.name}-${additionalNameParts.join('-')}"

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-Xlint:unchecked'
    }

    spotbugs {
        effort = 'max'
    }
    spotbugsTest.enabled = false

    jacoco {
        toolVersion = jacocoVersion
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = false
            csv.enabled = false
        }
    }
    test.finalizedBy jacocoTestReport

    install {
        repositories.mavenInstaller {
            pom.project {
                inceptionYear '2018'
                url 'https://github.com/szgabsz91/oauth2-authorization-proxy-server-spring-boot'
                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }
                issueManagement {
                    system 'Github'
                    url 'https://github.com/szgabsz91/oauth2-authorization-proxy-server-spring-boot/issues'
                }
                ciManagement {
                    system 'Travis CI'
                    url 'https://travis-ci.org/szgabsz91/oauth2-authorization-proxy-server-spring-boot'
                }
                scm {
                    connection 'scm:git:git@github.com:szgabsz91/oauth2-authorization-proxy-server-spring-boot.git'
                    developerConnection 'scm:git:git@github.com:szgabsz91/oauth2-authorization-proxy-server-spring-boot.git'
                    url 'https://github.com/szgabsz91/oauth2-authorization-proxy-server-spring-boot'
                    tag 'HEAD'
                }
                developers {
                    developer {
                        name 'szgabsz91'
                        email 'szgabsz91@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }
    }

    dependencies {
        api 'org.springframework.boot:spring-boot-starter'

        implementation "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
    }
}
